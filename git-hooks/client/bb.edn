;; (c) Copyright 2024-2025 KineticFire. All rights reserved.
;;
;; Licensed under the Apache License, Version 2.0 (the "License");
;; you may not use this file except in compliance with the License.
;; You may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.


;; KineticFire Labs: https://labs.kineticfire.com/
;;	   Project site: https://github.com/kineticfire-labs/semver-multi/


{:paths ["src" "../../common/src"]
 :deps {org.babashka/cli {:mvn/version "0.7.53"}}
 :tasks {
         
         ;;
         ;; execute script. not typically used, but leaving for reference.
         ;;

         go:commit-msg-enforcement {:task (do
                                            (defn get-shell-line
                                              []
                                              (let [shell-line "bb src/semver_multi/hooks/client/commit_msg_enforcement/core.bb"]
                                                (if (nil? *command-line-args*)
                                                  shell-line
                                                  (str shell-line " " (clojure.string/join " " (map (fn [x] (str x)) *command-line-args*))))))
                                            (shell (get-shell-line)))} 
         
         ;;
         ;; test
         ;;

         test:commit-msg-enforcement {:extra-paths ["test"]
                                      :extra-deps {io.github.cognitect-labs/test-runner
                                                   {:git/url "https://github.com/cognitect-labs/test-runner"
                                                    :git/tag "v0.5.1"
                                                    :git/sha "dfb30dd"}}
                                      :task (exec 'cognitect.test-runner.api/test)
                                      :exec-args {:dirs ["test/semver_multi/hooks/client/commit_msg_enforcement"]}
                                      :org.babashka/cli {:core {:nses [:symbol]
                                                                :vars [:symbol]}}}
         
         test:prevent-rebase {:extra-paths ["test"]
                              :extra-deps {io.github.cognitect-labs/test-runner
                                           {:git/url "https://github.com/cognitect-labs/test-runner"
                                            :git/tag "v0.5.1"
                                            :git/sha "dfb30dd"}}
                              :task (exec 'cognitect.test-runner.api/test)
                              :exec-args {:dirs ["test/semver_multi/hooks/client/prevent_rebase"]}
                              :org.babashka/cli {:core {:nses [:symbol]
                                                        :vars [:symbol]}}}
         
         test:warn-commit-branch {:extra-paths ["test"]
                                  :extra-deps {io.github.cognitect-labs/test-runner
                                               {:git/url "https://github.com/cognitect-labs/test-runner"
                                                :git/tag "v0.5.1"
                                                :git/sha "dfb30dd"}}
                                  :task (exec 'cognitect.test-runner.api/test)
                                  :exec-args {:dirs ["test/semver_multi/hooks/client/warn_commit_branch"]}
                                  :org.babashka/cli {:core {:nses [:symbol]
                                                            :vars [:symbol]}}}
         
         test:warn-push-branch {:extra-paths ["test"]
                                :extra-deps {io.github.cognitect-labs/test-runner
                                             {:git/url "https://github.com/cognitect-labs/test-runner"
                                              :git/tag "v0.5.1"
                                              :git/sha "dfb30dd"}}
                                :task (exec 'cognitect.test-runner.api/test)
                                :exec-args {:dirs ["test/semver_multi/hooks/client/warn_push_branch"]}
                                :org.babashka/cli {:core {:nses [:symbol]
                                                          :vars [:symbol]}}}
         
         test {:depends [test:commit-msg-enforcement
                         test:prevent-rebase
                         test:warn-commit-branch
                         test:warn-push-branch]}
         
         ;;
         ;; uber
         ;;

         uber:commit-msg-enforcement {:extra-deps {io.github.borkdude/carve {:git/url "https://github.com/borkdude/carve"
                                                                             :git/sha "cb621317ae1582869c8bd8f1a47cf57a3598d803"}}
                                      :task (do
                                              (shell "mkdir -p gen/lib")
                                              (shell "rm -rf gen/lib/commit-msg-enforcement")
                                              (shell "bb uberscript gen/lib/commit-msg-enforcement src/semver_multi/hooks/client/commit_msg_enforcement/core.bb")
                                              (exec 'carve.api/carve!)
                                              (println "Created uberscript 'commit-msg-enforcement' in 'gen/lib'."))
                                      :exec-args {:paths ["gen/lib/commit-msg-enforcement"]
                                                  :aggressive true
                                                  :silent true}}
         
         uber:prevent-rebase {:extra-deps {io.github.borkdude/carve {:git/url "https://github.com/borkdude/carve"
                                                                             :git/sha "cb621317ae1582869c8bd8f1a47cf57a3598d803"}}
                                      :task (do
                                              (shell "mkdir -p gen/lib")
                                              (shell "rm -rf gen/lib/prevent-rebase")
                                              (shell "bb uberscript gen/lib/prevent-rebase src/semver_multi/hooks/client/prevent_rebase/core.bb")
                                              (exec 'carve.api/carve!)
                                              (println "Created uberscript 'prevent-rebase' in 'gen/lib'."))
                                      :exec-args {:paths ["gen/lib/prevent-rebase"]
                                                  :aggressive true
                                                  :silent true}}
         
         uber:warn-commit-branch {:extra-deps {io.github.borkdude/carve {:git/url "https://github.com/borkdude/carve"
                                                                          :git/sha "cb621317ae1582869c8bd8f1a47cf57a3598d803"}}
                                   :task (do
                                           (shell "mkdir -p gen/lib")
                                           (shell "rm -rf gen/lib/warn-commit-branch")
                                           (shell "bb uberscript gen/lib/warn-commit-branch src/semver_multi/hooks/client/warn_commit_branch/core.bb")
                                           (exec 'carve.api/carve!)
                                           (println "Created uberscript 'warn-commit-branch' in 'gen/lib'."))
                                   :exec-args {:paths ["gen/lib/warn-commit-branch"]
                                               :aggressive true
                                               :silent true}}
         
         uber:warn-push-branch {:extra-deps {io.github.borkdude/carve {:git/url "https://github.com/borkdude/carve"
                                                                       :git/sha "cb621317ae1582869c8bd8f1a47cf57a3598d803"}}
                                :task (do
                                        (shell "mkdir -p gen/lib")
                                        (shell "rm -rf gen/lib/warn-push-branch")
                                        (shell "bb uberscript gen/lib/warn-push-branch src/semver_multi/hooks/client/warn_push_branch/core.bb")
                                        (exec 'carve.api/carve!)
                                        (println "Created uberscript 'warn-push-branch' in 'gen/lib'."))
                                :exec-args {:paths ["gen/lib/warn-push-branch"]
                                            :aggressive true
                                            :silent true}}
         
         uber {:depends [uber:commit-msg-enforcement
                         uber:prevent-rebase
                         uber:warn-commit-branch
                         uber:warn-push-branch]}}}
